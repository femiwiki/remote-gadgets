local infobox = require('Module:@en/Infobox')

local p = {}


local function _infobox(frame, template)
  local origArgs = {}

  if not template then
    if frame == mw.getCurrentFrame() then
      origArgs = frame:getParent().args
    else
      origArgs = frame
    end
  else
    origArgs = {}
    for k,v in pairs(frame.args) do origArgs[k] = mw.text.trim(v) end
  end

  local singleParamsL10nMap = {
    ['이름'] = 'name',
    ['주제'] = 'header',
    ['주제id'] = 'headerid',
    ['주제속성'] = 'headerclass',
    ['주제모양'] = 'headerstyle',
    ['항목'] = 'label',
    ['항목id'] = 'labelid',
    ['항목모양'] = 'labelstyle',
    ['내용'] = 'data',
    ['내용id'] = 'dataid',
    ['내용모양'] = 'datastyle',
    ['속성'] = 'class',
    ['행id'] = 'rowid',
    ['행속성'] = 'rowclass',
    ['행모양'] = 'rowstyle',
    ['행셀모양'] = 'rowcellstyle',
    ['큰제목'] = 'title',
    ['큰제목속성'] = 'titleclass',
    ['큰제목모양'] = 'titlestyle',
    ['제목'] = 'above',
    ['제목속성'] = 'aboveclass',
    ['제목모양'] = 'abovestyle',
    ['아랫글'] = 'below',
    ['아랫글속성'] = 'belowclass',
    ['아랫글모양'] = 'belowstyle',
    ['작은제목'] = 'subheader',
    ['작은제목모양'] = 'subheaderstyle',
    ['작은제목속성'] = 'subheaderclass',
    ['작은제목행속성'] = 'subheaderrowclass',
    ['그림'] = 'image',
    ['설명'] = 'caption',
    ['그림설명'] = 'caption',
    ['그림모양'] = 'imagestyle',
    ['그림속성'] = 'imageclass',
    ['그림행속성'] = 'imagerowclass',
    ['그림설명모양'] = 'captionstyle',
    ['전체속성'] = 'bodyclass',
    ['전체모양'] = 'bodystyle',
  }
  local generalParamsL10nMap = {
    ['작은제목'] = 'subheader',
    ['작은제목행속성'] = 'subheaderrowclass',
    ['그림'] = 'image',
    ['설명'] = 'caption',
    ['그림설명'] = 'caption',
    ['주제'] = 'header',
    ['항목'] = 'label',
    ['내용'] = 'data',
    ['내용모양'] = 'datastyle',
    ['속성'] = 'class',
    ['행속성'] = 'rowclass',
    ['행모양'] = 'rowstyle',
    ['행셀모양'] = 'rowcellstyle',
    ['내용id'] = 'dataid',
    ['항목id'] = 'labelid',
    ['주제id'] = 'headerid',
    ['행id'] = 'rowid',
  }

  local argsClone = {}

  -- 시간복잡도 O(n) (n은 #singleParamsL10nMap)
  for localParam, enParam in pairs(singleParamsL10nMap) do
    if origArgs[localParam] ~= '' then
      argsClone[enParam] = origArgs[localParam]
    end
  end

  -- 시간복잡도 O(m*n) (m은 #originArgs, n은 #generalParamsL10nMap)
  for k, v in pairs(origArgs) do
    for localParam, enParam in pairs(generalParamsL10nMap) do
      local num = tostring(k):match('^' .. localParam .. '([1-9]%d*)$')
      if num then
        argsClone[enParam .. num] = origArgs[localParam .. num]
        break
      end
    end
  end

  frame.args = argsClone
  return infobox.infoboxTemplate(frame)
end


function p.infobox(frame)
  return _infobox(frame)
end

function p.infoboxTemplate(frame)
  return _infobox(frame, true)
end


return p
